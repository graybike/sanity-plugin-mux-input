{"version":3,"file":"Player-cd64a0c7.js","sources":["../../src/hooks/useCancelUpload.ts","../../src/util/getVideoSrc.ts","../../src/components/EditThumbnailDialog.tsx","../../src/util/getStoryboardSrc.ts","../../src/components/Player.styled.tsx","../../src/components/Player.tsx"],"sourcesContent":["import {useCallback} from 'react'\nimport {PatchEvent, unset} from 'sanity'\n\nimport {deleteAsset} from '../actions/assets'\nimport {useClient} from '../hooks/useClient'\nimport type {MuxInputProps, VideoAssetDocument} from '../util/types'\n\nexport const useCancelUpload = (asset: VideoAssetDocument, onChange: MuxInputProps['onChange']) => {\n  const client = useClient()\n  return useCallback(() => {\n    if (!asset) {\n      return\n    }\n    onChange(PatchEvent.from(unset()))\n    if (asset.assetId) {\n      deleteAsset(client, asset.assetId)\n    }\n    if (asset._id) {\n      client.delete(asset._id)\n    }\n  }, [asset, client, onChange])\n}\n","import type {SanityClient} from 'sanity'\n\nimport {generateJwt} from './generateJwt'\nimport {getPlaybackId} from './getPlaybackId'\nimport {getPlaybackPolicy} from './getPlaybackPolicy'\nimport type {MuxVideoUrl, VideoAssetDocument} from './types'\n\ninterface VideoSrcOptions {\n  asset: VideoAssetDocument\n  client: SanityClient\n}\n\nexport function getVideoSrc({asset, client}: VideoSrcOptions): MuxVideoUrl {\n  const playbackId = getPlaybackId(asset)\n  const searchParams = new URLSearchParams()\n\n  if (getPlaybackPolicy(asset) === 'signed') {\n    const token = generateJwt(client, playbackId, 'v')\n    searchParams.set('token', token)\n  }\n\n  return `https://stream.mux.com/${playbackId}.m3u8?${searchParams}`\n}\n","import {Button, Dialog, Stack, Text} from '@sanity/ui'\nimport React, {useCallback, useId, useMemo, useState} from 'react'\nimport {getDevicePixelRatio} from 'use-device-pixel-ratio'\n\nimport {useClient} from '../hooks/useClient'\nimport type {SetDialogState} from '../hooks/useDialogState'\nimport type {VideoAssetDocument} from '../util/types'\nimport {VideoThumbnail} from './VideoSource.styled'\n\nexport interface Props {\n  asset: VideoAssetDocument\n  getCurrentTime: () => number\n  setDialogState: SetDialogState\n}\nexport default function EditThumbnailDialog({asset, getCurrentTime, setDialogState}: Props) {\n  const client = useClient()\n  const dialogId = `EditThumbnailDialog${useId()}`\n  const nextTime = useMemo(() => getCurrentTime(), [getCurrentTime])\n  const assetWithNewThumbnail = useMemo(() => ({...asset, thumbTime: nextTime}), [asset, nextTime])\n  const [saving, setSaving] = useState(false)\n  const [error, setError] = useState<Error | null>(null)\n  const handleSave = useCallback(() => {\n    setSaving(true)\n    client\n      .patch(asset._id!)\n      .set({thumbTime: nextTime})\n      .commit({returnDocuments: false})\n      .then(() => void setDialogState(false))\n      .catch(setError)\n      .finally(() => void setSaving(false))\n  }, [client, asset._id, nextTime, setDialogState])\n  const width = 300 * getDevicePixelRatio({maxDpr: 2})\n\n  if (error) {\n    // eslint-disable-next-line no-warning-comments\n    // @TODO handle errors more gracefully\n    throw error\n  }\n\n  return (\n    <Dialog\n      id={dialogId}\n      header=\"Edit thumbnail\"\n      onClose={() => setDialogState(false)}\n      footer={\n        <Stack padding={3}>\n          <Button\n            key=\"thumbnail\"\n            mode=\"ghost\"\n            tone=\"primary\"\n            loading={saving}\n            onClick={handleSave}\n            text=\"Set new thumbnail\"\n          />\n        </Stack>\n      }\n    >\n      <Stack space={3} padding={3}>\n        <Stack space={2}>\n          <Text size={1} weight=\"semibold\">\n            Current:\n          </Text>\n          <VideoThumbnail asset={asset} width={width} />\n        </Stack>\n        <Stack space={2}>\n          <Text size={1} weight=\"semibold\">\n            New:\n          </Text>\n          <VideoThumbnail asset={assetWithNewThumbnail} width={width} />\n        </Stack>\n      </Stack>\n    </Dialog>\n  )\n}\n","import type {SanityClient} from 'sanity'\n\nimport {generateJwt} from './generateJwt'\nimport {getPlaybackId} from './getPlaybackId'\nimport {getPlaybackPolicy} from './getPlaybackPolicy'\nimport type {MuxStoryboardUrl, VideoAssetDocument} from './types'\n\ninterface StoryboardSrcOptions {\n  asset: VideoAssetDocument\n  client: SanityClient\n}\n\nexport function getStoryboardSrc({asset, client}: StoryboardSrcOptions): MuxStoryboardUrl {\n  const playbackId = getPlaybackId(asset)\n  const searchParams = new URLSearchParams()\n\n  if (getPlaybackPolicy(asset) === 'signed') {\n    const token = generateJwt(client, playbackId, 's')\n    searchParams.set('token', token)\n  }\n\n  return `https://image.mux.com/${playbackId}/storyboard.vtt?${searchParams}`\n}\n","import {Card} from '@sanity/ui'\nimport {MediaControlBar, MediaPosterImage} from 'media-chrome/dist/react'\nimport React, {useEffect, useMemo, useRef, useState} from 'react'\nimport styled from 'styled-components'\n\nimport {useClient} from '../hooks/useClient'\nimport {getPosterSrc} from '../util/getPosterSrc'\nimport {getStoryboardSrc} from '../util/getStoryboardSrc'\nimport type {VideoAssetDocument} from '../util/types'\n\nexport const VideoContainer = styled(Card)`\n  position: relative;\n  min-height: 150px;\n  aspect-ratio: 16 / 9;\n  overflow: hidden;\n  border-radius: 1px;\n  media-airplay-button[media-airplay-unavailable] {\n    display: none;\n  }\n  media-volume-range[media-volume-unavailable] {\n    display: none;\n  }\n  media-pip-button[media-pip-unavailable] {\n    display: none;\n  }\n  media-controller {\n    --media-control-background: transparent;\n    --media-control-hover-background: transparent;\n    --media-range-track-background-color: rgba(255, 255, 255, 0.5);\n    --media-range-track-border-radius: 3px;\n    width: 100%;\n    height: 100%;\n    background-color: transparent;\n  }\n  media-control-bar {\n    --media-button-icon-width: 18px;\n    --media-preview-time-margin: 0px;\n  }\n  media-control-bar:not([slot]) :is([role='button'], [role='switch'], button) {\n    height: 44px;\n  }\n  .size-extra-small media-control-bar [role='button'],\n  .size-extra-small media-control-bar [role='switch'] {\n    height: auto;\n    padding: 4.4% 3.2%;\n  }\n  .mxp-spacer {\n    flex-grow: 1;\n    height: 100%;\n    background-color: var(--media-control-background, rgba(20, 20, 30, 0.7));\n  }\n  media-controller::part(vertical-layer) {\n    transition: background-color 1s;\n  }\n  media-controller:is([media-paused], :not([user-inactive]))::part(vertical-layer) {\n    background-color: rgba(0, 0, 0, 0.6);\n    transition: background-color 0.25s;\n  }\n  .mxp-center-controls {\n    --media-background-color: transparent;\n    --media-button-icon-width: 100%;\n    --media-button-icon-height: auto;\n    pointer-events: none;\n    width: 100%;\n    display: flex;\n    flex-flow: row;\n    align-items: center;\n    justify-content: center;\n  }\n  .mxp-center-controls media-play-button {\n    --media-control-background: transparent;\n    --media-control-hover-background: transparent;\n    padding: 0;\n    width: max(27px, min(9%, 90px));\n  }\n  .mxp-center-controls media-seek-backward-button,\n  .mxp-center-controls media-seek-forward-button {\n    --media-control-background: transparent;\n    --media-control-hover-background: transparent;\n    padding: 0;\n    margin: 0 10%;\n    width: min(7%, 70px);\n  }\n  media-loading-indicator {\n    --media-loading-icon-width: 100%;\n    --media-button-icon-height: auto;\n    pointer-events: none;\n    position: absolute;\n    width: min(15%, 150px);\n    display: flex;\n    flex-flow: row;\n    align-items: center;\n    justify-content: center;\n  }\n  /* Intentionally don't target the div for transition but the children\n of the div. Prevents messing with media-chrome's autohide feature. */\n  media-loading-indicator + div * {\n    transition: opacity 0.15s;\n    opacity: 1;\n  }\n  media-loading-indicator[media-loading]:not([media-paused]) ~ div > * {\n    opacity: 0;\n    transition-delay: 400ms;\n  }\n  media-volume-range {\n    width: min(100%, 100px);\n  }\n  media-time-display {\n    white-space: nowrap;\n  }\n  :is(media-time-display, media-text-display, media-playback-rate-button) {\n    color: inherit;\n  }\n  media-controller:fullscreen media-control-bar[slot='top-chrome'] {\n    /* Hide menus and buttons that trigger modals when in full-screen */\n    display: none;\n  }\n  video {\n    background: transparent;\n  }\n  media-controller:not(:fullscreen) video {\n    aspect-ratio: 16 / 9;\n  }\n  media-controller:not(:-webkit-full-screen) video {\n    aspect-ratio: 16 / 9;\n  }\n`\n\nexport const StyledCenterControls = styled.div`\n  && {\n    --media-background-color: transparent;\n    --media-button-icon-width: 100%;\n    --media-button-icon-height: auto;\n    pointer-events: none;\n    width: 100%;\n    display: flex;\n    flex-flow: row;\n    align-items: center;\n    justify-content: center;\n    media-play-button {\n      --media-control-background: transparent;\n      --media-control-hover-background: transparent;\n      padding: 0;\n      width: max(27px, min(9%, 90px));\n    }\n  }\n`\n\nexport const TopControls = styled(MediaControlBar)`\n  justify-content: flex-end;\n  button {\n    height: auto;\n  }\n`\n\nexport interface PosterImageProps {\n  asset: VideoAssetDocument\n}\nexport function PosterImage({asset}: PosterImageProps) {\n  const client = useClient()\n  const ref = useRef<HTMLElement>(null)\n  const src = useMemo(\n    () => getPosterSrc({client, asset, width: 1920, height: 1080}),\n    [client, asset]\n  )\n\n  useEffect(() => {\n    if (ref.current) {\n      const style = document.createElement('style')\n      style.innerHTML = 'img { object-fit: contain; }'\n      if (ref.current?.shadowRoot) {\n        ref.current.shadowRoot.appendChild(style)\n      }\n    }\n  }, [])\n\n  return <MediaPosterImage ref={ref} slot=\"poster\" src={src} />\n}\n\nexport interface ThumbnailsMetadataTrackProps {\n  asset: VideoAssetDocument\n}\nexport function ThumbnailsMetadataTrack({asset}: ThumbnailsMetadataTrackProps) {\n  const client = useClient()\n  // Why useState instead of useMemo? Because we really really only want to run it exactly once and useMemo doesn't make that guarantee\n  const [src] = useState<string>(() => getStoryboardSrc({asset, client}))\n\n  return <track label=\"thumbnails\" default kind=\"metadata\" src={src} />\n}\n","import MuxVideo from '@mux/mux-video-react'\nimport {Card, Text} from '@sanity/ui'\nimport {\n  MediaControlBar,\n  MediaController,\n  MediaDurationDisplay,\n  MediaFullscreenButton,\n  MediaLoadingIndicator,\n  MediaMuteButton,\n  MediaPlayButton,\n  MediaTimeDisplay,\n  MediaTimeRange,\n} from 'media-chrome/dist/react'\nimport React, {useCallback, useEffect, useMemo, useRef, useState} from 'react'\n\nimport {useCancelUpload} from '../hooks/useCancelUpload'\nimport {useClient} from '../hooks/useClient'\nimport type {DialogState, SetDialogState} from '../hooks/useDialogState'\nimport {getVideoSrc} from '../util/getVideoSrc'\nimport type {MuxInputProps, VideoAssetDocument} from '../util/types'\nimport pluginPkg from './../../package.json'\nimport EditThumbnailDialog from './EditThumbnailDialog'\nimport {\n  PosterImage,\n  StyledCenterControls,\n  ThumbnailsMetadataTrack,\n  TopControls,\n  VideoContainer,\n} from './Player.styled'\nimport {UploadProgress} from './UploadProgress'\n\ninterface Props extends Pick<MuxInputProps, 'onChange' | 'readOnly'> {\n  buttons?: React.ReactNode\n  asset: VideoAssetDocument\n  dialogState: DialogState\n  setDialogState: SetDialogState\n}\n\nconst MuxVideoOld = ({asset, buttons, readOnly, onChange, dialogState, setDialogState}: Props) => {\n  const client = useClient()\n  const isLoading = useMemo<boolean | string>(() => {\n    if (asset?.status === 'preparing') {\n      return 'Preparing the video'\n    }\n    if (asset?.status === 'waiting_for_upload') {\n      return 'Waiting for upload to start'\n    }\n    if (asset?.status === 'waiting') {\n      return 'Processing upload'\n    }\n    if (asset?.status === 'ready') {\n      return false\n    }\n    if (typeof asset?.status === 'undefined') {\n      return false\n    }\n\n    return true\n  }, [asset])\n  const isPreparingStaticRenditions = useMemo<boolean>(() => {\n    if (asset?.data?.static_renditions?.status === 'preparing') {\n      return true\n    }\n    if (asset?.data?.static_renditions?.status === 'ready') {\n      return false\n    }\n    return false\n  }, [asset?.data?.static_renditions?.status])\n  const videoSrc = useMemo(() => asset.playbackId && getVideoSrc({client, asset}), [asset, client])\n  const [error, setError] = useState<MediaError | Error | null>(null)\n  const handleError = useCallback<React.ReactEventHandler<HTMLVideoElement>>(\n    (event) => setError(event.currentTarget.error),\n    []\n  )\n  const playRef = useRef<HTMLDivElement>(null)\n  const muteRef = useRef<HTMLDivElement>(null)\n  const video = useRef<HTMLVideoElement>(null)\n  const getCurrentTime = useCallback(() => video.current?.currentTime ?? 0, [video])\n  const handleCancelUpload = useCancelUpload(asset, onChange)\n\n  useEffect(() => {\n    const style = document.createElement('style')\n    style.innerHTML = 'button svg { vertical-align: middle; }'\n\n    if (playRef.current?.shadowRoot) {\n      playRef.current.shadowRoot.appendChild(style)\n    }\n    if (muteRef?.current?.shadowRoot) {\n      muteRef.current.shadowRoot.appendChild(style.cloneNode(true))\n    }\n  }, [])\n\n  useEffect(() => {\n    if (asset?.status === 'errored') {\n      handleCancelUpload()\n      // eslint-disable-next-line no-warning-comments\n      // @TODO use better error handling\n      throw new Error(asset.data?.errors?.messages?.join(' '))\n    }\n  }, [asset.data?.errors?.messages, asset?.status, handleCancelUpload])\n\n  const signedToken = useMemo(() => {\n    try {\n      const url = new URL(videoSrc!)\n      return url.searchParams.get('token')\n    } catch {\n      return false\n    }\n  }, [videoSrc])\n\n  if (error) {\n    // @TODO better error handling\n    throw error\n  }\n\n  if (!asset || !asset.status) {\n    return null\n  }\n\n  if (isLoading) {\n    return (\n      <UploadProgress\n        progress={100}\n        filename={asset?.filename}\n        text={(isLoading !== true && isLoading) || 'Waiting for Mux to complete the file'}\n        onCancel={readOnly ? undefined : () => handleCancelUpload()}\n      />\n    )\n  }\n\n  return (\n    <>\n      <VideoContainer shadow={1} tone=\"transparent\" scheme=\"dark\">\n        <MediaController>\n          <MuxVideo\n            playsInline\n            ref={video}\n            playbackId={`${asset.playbackId}${signedToken ? `?token=${signedToken}` : ''}`}\n            onError={handleError}\n            slot=\"media\"\n            preload=\"metadata\"\n            crossOrigin=\"anonymous\"\n            metadata={{\n              player_name: 'Sanity Admin Dashboard',\n              player_version: pluginPkg.version,\n              page_type: 'Preview Player',\n            }}\n          >\n            <ThumbnailsMetadataTrack asset={asset} />\n          </MuxVideo>\n          <PosterImage asset={asset} />\n          <MediaLoadingIndicator slot=\"centered-chrome\" noAutoHide />\n          <StyledCenterControls slot=\"centered-chrome\">\n            <MediaPlayButton />\n          </StyledCenterControls>\n          {buttons && <TopControls slot=\"top-chrome\">{buttons}</TopControls>}\n          <MediaControlBar>\n            <MediaMuteButton />\n            <MediaTimeDisplay />\n            <MediaTimeRange />\n            <MediaDurationDisplay />\n            <MediaFullscreenButton />\n          </MediaControlBar>\n        </MediaController>\n        {isPreparingStaticRenditions && (\n          <Card\n            padding={2}\n            radius={1}\n            style={{\n              background: 'var(--card-fg-color)',\n              position: 'absolute',\n              top: '0.5em',\n              left: '0.5em',\n            }}\n          >\n            <Text size={1} style={{color: 'var(--card-bg-color)'}}>\n              MUX is preparing static renditions, please stand by\n            </Text>\n          </Card>\n        )}\n      </VideoContainer>\n      {dialogState === 'edit-thumbnail' && (\n        <EditThumbnailDialog\n          asset={asset}\n          getCurrentTime={getCurrentTime}\n          setDialogState={setDialogState}\n        />\n      )}\n    </>\n  )\n}\n\nexport default MuxVideoOld\n"],"names":["useCancelUpload","asset","onChange","client","useClient","useCallback","PatchEvent","from","unset","assetId","deleteAsset","_id","delete","getVideoSrc","_ref","playbackId","getPlaybackId","searchParams","URLSearchParams","getPlaybackPolicy","token","generateJwt","set","concat","EditThumbnailDialog","_ref2","getCurrentTime","setDialogState","dialogId","useId","nextTime","useMemo","assetWithNewThumbnail","thumbTime","saving","setSaving","useState","error","setError","handleSave","patch","commit","returnDocuments","then","catch","finally","width","getDevicePixelRatio","maxDpr","jsx","Dialog","id","header","onClose","footer","Stack","padding","children","Button","mode","tone","loading","onClick","text","jsxs","space","Text","size","weight","VideoThumbnail","getStoryboardSrc","_ref3","VideoContainer","styled","Card","_templateObject","_taggedTemplateLiteral","StyledCenterControls","div","_templateObject2","TopControls","MediaControlBar","_templateObject3","PosterImage","_ref4","ref","useRef","src","getPosterSrc","height","useEffect","_a","current","style","document","createElement","innerHTML","shadowRoot","appendChild","MediaPosterImage","slot","ThumbnailsMetadataTrack","_ref5","label","default","kind","MuxVideoOld","_ref6","buttons","readOnly","dialogState","_b","_c","_d","isLoading","status","isPreparingStaticRenditions","data","static_renditions","videoSrc","handleError","event","currentTarget","playRef","muteRef","video","currentTime","handleCancelUpload","cloneNode","Error","errors","messages","join","signedToken","url","URL","get","UploadProgress","progress","filename","onCancel","Fragment","shadow","scheme","MediaController","MuxVideo","playsInline","onError","preload","crossOrigin","metadata","player_name","player_version","pluginPkg","version","page_type","MediaLoadingIndicator","noAutoHide","MediaPlayButton","MediaMuteButton","MediaTimeDisplay","MediaTimeRange","MediaDurationDisplay","MediaFullscreenButton","radius","background","position","top","left","color"],"mappings":"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"}